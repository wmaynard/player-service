image: alpine:latest

variables:
  # KUBE_INGRESS_BASE_DOMAIN is the application deployment domain and should be set as a variable at the group or project level.
  # from gitlab project ci variables
  KUBE_INGRESS_BASE_DOMAIN: nonprod.tower.cdrentertainment.com
  POSTGRES_ENABLED: "false"
  HELM_SCALE_EXTRA_ARGS: --set postgresql.enabled="false" 
  K8S_SECRET_XMS: "$XMS"
  K8S_SECRET_XMX: "$XMX"
  K8S_SECRET_MAXPERM: "$MAXPERM"
  K8S_SECRET_RUMBLE_CONFIG_SERVICE_URL: "$CONFIG_SERVICE_URL"
  K8S_SECRET_RUMBLE_COMPONENT: "$RUMBLE_COMPONENT"
  K8S_SECRET_RUMBLE_DEPLOYMENT: "$RUMBLE_DEPLOYMENT"
  K8S_SECRET_LOGGLY_URL: "$LOGGLY_URL"
  K8S_SECRET_GRAPHITE: "$GRAPHITE"
  K8S_SECRET_GOOGLE_APP_ID: "$GOOGLE_APP_ID"
  K8S_SECRET_GOOGLE_CLIENT_ID: "$GOOGLE_APP_ID"
  K8S_SECRET_GOOGLE_VALIDATE_TOKEN_URL: "$GOOGLE_VALIDATE_TOKEN_URL"
  K8S_SECRET_MONGODB_NAME: "$RUMBLE_COMPONENT-$RUMBLE_DEPLOYMENT"
  K8S_SECRET_FB_APP_ID: "NOT_AVAILABLE"
  K8S_SECRET_FB_APP_SECRET: "NOT_AVAILABLE"
  K8S_SECRET_FB_VALIDATE_TOKEN_URL: "https://graph.facebook.com/me"
  K8S_SECRET_GEO_IP_S3_BUCKET: "$GEO_IP_S3_BUCKET"
  K8S_SECRET_GEO_IP_S3_KEY: "$GEO_IP_S3_KEY"
  K8S_SECRET_GEO_IP_S3_REGION: "$GEO_IP_S3_REGION"
  K8S_SECRET_RUMBLE_KEY: "$RUMBLE_KEY"
  K8S_SECRET_GAME_GUKEY: "$GAME_GUKEY"
  K8S_SECRET_GOOGLE_APP_SECRET: "$GOOGLE_APP_SECRET"
  K8S_SECRET_MONGODB_URI: "$MONGODB_URI"


  DOCKER_DRIVER: overlay2
  DEPLOY_TYPE: "both" # "kubernetes","beanstalk","both"

  ROLLOUT_RESOURCE_TYPE: deployment

  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

stages:
  - app_build
  - build
  - scan
  - deploy  # dummy stage to follow the template guidelines
  - dev
  - staging
  - production
  - performance
  - cleanup

build_app:
  stage: app_build
  image: gradle:6-jdk8
  allow_failure: false
  tags:
    - kubernetes
  cache:
    key: player-service
    paths:
      - .gradle
  script:
    - apt-get update -yq
    - apt install zip
    - chmod +x ./gradlew
    - ./gradlew assemble
    - rm -f ~/.gradle/caches/modules-2/modules-2.lock
    - rm -f ~/.gradle/caches/modules-2/gc.properties
  artifacts:
    paths:
      - build/libs/*.war


build_image:
  stage: build
  allow_failure: false
  cache:
    key: receipt-service-scan
    paths:
      - ./.trivycache
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - mkdir -p $CI_PROJECT_DIR/trivy
    - mkdir -p $CI_PROJECT_DIR/.trivycache
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
    - cd $CI_PROJECT_DIR/trivy
    - wget https://github.com/aquasecurity/trivy/releases/download/v0.20.1/trivy_0.20.1_Linux-64bit.tar.gz
    - tar -zxvf trivy*
    - chmod +x $CI_PROJECT_DIR/trivy
    - wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
    - ./trivy --cache-dir $CI_PROJECT_DIR/.trivycache image --severity HIGH,CRITICAL --format template --template "@html.tpl" --output $CI_PROJECT_DIR/trivy/$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.html $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  rules:
    - if: '$BUILD_DISABLED'
      when: never
    - if: $DEPLOY_TYPE == "beanstalk"
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'
    - if: $DEPLOY_TYPE == "kubernetes" || $DEPLOY_TYPE == "both"
      when: always
  needs:
    - job: build_app
      artifacts: true
  artifacts:
    paths:
      - $CI_PROJECT_DIR/trivy/$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.html
    expire_in: 1 week

commit_scan_results:
  stage: scan
  allow_failure: false
  image:
    name: ubuntu
  script:
    - apt update
    - git clone https://eric.sheris:${NUGET_PAT}@gitlab.cdrentertainment.com/platform-services/$CI_PROJECT_NAME.wiki.git
    - mkdir -p $CI_PROJECT_DIR/receipt-service.wiki/securityscans/
    - cp $CI_PROJECT_DIR/trivy/$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.html $CI_PROJECT_NAME.wiki/securityscans/$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.md
    - cd $CI_PROJECT_NAME.wiki
    - export TZ=":America/Los_Angeles"
    - export OUTPUT="[`date +\"%m-%d-%y %r\"`]\(securityscans/$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA\)\n\n"
    - echo "$(echo -e $OUTPUT; cat securityscans/SecurityScans.md)" > securityscans/SecurityScans.md
    - git config --global user.email "platform-ops@rumbleentertainment.com"
    - git config --global user.name "Gitlab"
    - git add .; git commit -m "securityscan for image $CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"; git push
  needs:
    - job: build_image
      artifacts: true

include: 
  - '/.gitlab/deploy-eb.yaml'
  - '/.gitlab/deploy-k8s.yaml'
